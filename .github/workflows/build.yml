name: "Build testing"
on: [push, pull_request]

jobs:
  ubuntu-build:
    strategy:
      matrix:
        os: [ubuntu-18.04]
        cc: [gcc]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get -qq update
          sudo apt-get install scons qt5-default libqt5x11extras5-dev libxrandr-dev libxv-dev libasound2-dev
      - name: Build
        shell: bash
        run: |
          sh ./scripts/build_shlib.sh
          sh ./scripts/build_qt.sh

  macos-build:
    strategy:
      matrix:
        os: [macos-10.15]
        cc: [clang]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        shell: bash
        run: |
          brew install scons
          curl -LJO https://github.com/entrpntr/gsr-qt-builds/releases/download/v5.15.0-gsr/Qt-5.15.0-macos-clang.7z
          sudo 7z x Qt-5.15.0-macos-clang.7z -o/usr/local/
      - name: Build
        shell: bash
        run: |
          echo 'export PATH="/usr/local/Qt-5.15.0/bin:$PATH"' >> ~/.bash_profile
          source ~/.bash_profile
          sh ./scripts/build_shlib.sh
          sh ./scripts/build_qt.sh
          (cd ./gambatte_qt/bin && macdeployqt Gambatte-Speedrun.app -dmg)
      - name: Upload .dmg
        uses: actions/upload-artifact@v2
        with:
          name: Gambatte-Speedrun.dmg
          path: ./gambatte_qt/bin/Gambatte-Speedrun.dmg
      - name: Upload .dylib
        uses: actions/upload-artifact@v2
        with:
          name: libgambatte.dylib
          path: ./libgambatte/libgambatte.dylib

  mingw-build:
    strategy:
      matrix:
        mingw: ["MINGW32", "MINGW64"]
        include:
          - mingw: "MINGW32"
            package: "mingw-w64-i686"
          - mingw: "MINGW64"
            package: "mingw-w64-x86_64"
    runs-on: windows-2019
    defaults:
      run:
        shell: bash.exe --login -eo pipefail "{0}"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up shell
        shell: pwsh
        run: |
          echo ::add-path::C:\msys64\usr\bin\
      - name: Install dependencies
        run: |
          pacman --noconfirm -S ${{ matrix.package }}-qt5-static
      - name: Build
        shell: bash
        run: |
          echo 'PATH="/${{ matrix.mingw }}/bin:/${{ matrix.mingw }}/qt5-static/bin:${PATH}"' >> ~/.bash_profile
          source ~/.bash_profile
          sh ./scripts/build_shlib.sh
          sh ./scripts/build_qt.sh
      - name: Upload .dll (64-bit)
        uses: actions/upload-artifact@v2
        if: matrix.mingw == 'MINGW64'
        with:
          name: libgambatte.dll
          path: ./libgambatte/libgambatte.dll

  msvc-build:
    runs-on: windows-2019
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86
      - name: Install dependencies
        run: |
          pip install scons
          curl -LJO https://github.com/entrpntr/gsr-qt-builds/releases/download/v5.15.0-gsr/Qt-5.15.0-win32-msvc.7z
          7z x Qt-5.15.0-win32-msvc.7z -oC:\Qt
      - name: Build
        run: |
          set PATH=C:\Qt\Qt-5.15.0\bin;%PATH%
          msvc\build_qt.bat
      - name: Upload .exe (32-bit)
        uses: actions/upload-artifact@v2
        with:
          name: gambatte_speedrun.exe
          path: ./gambatte_qt/bin/gambatte_speedrun.exe
